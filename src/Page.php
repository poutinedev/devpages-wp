<?php

namespace Poutine\DevPagesWP;

class Page
{
	private $url;
	private $settings;

	public function __construct($url, $settings)
	{
		$this->url = $this->prepareURL($url);
		$this->settings = $settings; // @TODO support some setting overrides
	}

	public function register()
	{
		$this->registerCPT();
		$this->registerHooks();
	}

	public function getURL()
	{
		return $this->url;
	}

	public function getURLSlug()
	{
		return (str_replace("/", "-", $this->url));
	}

	private function prepareURL($url)
	{
		$parsedURL = str_replace(array("&", "?"), "", $url);
		$parsedURL = trim(strtolower($parsedURL));
		$parsedURL = ltrim($parsedURL, "\/");
		$parsedURL = rtrim($parsedURL, "\/");
		return apply_filters("poutine_static_url_clean", $parsedURL, $url);
	}

	private function registerCPT()
	{
		$cptArgs = array(
			"label"                 => "Dev/Static Page '{$this->url}'",
			"description"           => "Static Page generated by Dev Pages for WP",
			"public"                => true,
			"show_ui"               => false,
			"show_in_menu"          => false,
			"show_in_admin_bar"     => false,
			"show_in_nav_menus"     => false,
			"can_export"            => true,
			"has_archive"           => true,
			"exclude_from_search"   => true,
			"publicly_queryable"    => true,
			'rewrite' 							=> array(
																		"slug" => $this->url,
																	),
		);

		register_post_type( $this->getURLSlug(), $cptArgs );
	}

	private function registerHooks()
	{
		add_filter( "template_include", array($this, "templateOverride"), 99 );
	}
	
	public function templateOverride($template)
	{
		if ( is_post_type_archive( $this->getURLSlug() )  ) {
			$templateFile = apply_filters("poutine_static_template", "static-{$this->getURLSlug()}.php", $this->getURLSlug());
			$templateFileOverrideExists = locate_template( array($templateFile) );
			if ( "" != $templateFileOverrideExists ) {
				return $templateFileOverrideExists;
			}
		}
			
		return $template;
	}
}